singleQuery=select top 1 issue.*,order_code.*, oc.*,  rate_class_effective.*, (case when ratecard.currency is null then state.currency else ratecard.currency end) as currency,(case when order_code.subscription_category_id=7 then 0.0 else ratecard.price end) as ratecard_price,isnull((case when ratecard.currency is null then (1/(c.exchange_rate))* ratecard.price else (case when order_code.subscription_category_id=7 then 0.0 else ratecard.price end)end),0.00)as localAmount,isnull((case when ratecard.currency is null then  ratecard.price else (case when order_code.subscription_category_id=7 then 0.0 else (ratecard.price * c.exchange_rate)end) end ),0.00) as baseAmount,c.exchange_rate,state.state from order_code order_code inner join oc oc on oc.oc_id = order_code.oc_id inner join issue issue on issue.oc_id=oc.oc_id  inner join rate_class on rate_class.oc_id =oc.oc_id inner join rate_class_effective rate_class_effective on rate_class_effective.rate_class_id = case when order_code.newsub_rate_class_id is not null then order_code.newsub_rate_class_id else rate_class.rate_class_id end  and rate_class_effective.effective_date=(select max(rate_class_effective.effective_date) from rate_class_effective where  rate_class_effective.rate_class_id =  case when order_code.newsub_rate_class_id is not null then order_code.newsub_rate_class_id else rate_class.rate_class_id end)  inner join ratecard ratecard on(ratecard.rate_class_effective_seq = rate_class_effective.rate_class_effective_seq and ratecard.rate_class_id = rate_class_effective.rate_class_id) and ratecard.unit_type=order_code.revenue_method inner join customer_address on customer_id= ? inner join state on state.state=customer_address.state or state.state_code_for_taxes=customer_address.state inner join currency c on c.currency=(case when ratecard.currency is null then state.currency else ratecard.currency end) where order_code.order_code_id = ? and issue.issue_id= ? and (ratecard.region=(select region from region_state where state=(select case when state_code_for_taxes is null then state else state_code_for_taxes end as state from state where state=(select top 1 state from customer_address where customer_id= ?)) and (region_list=(select top 1 region_list from region_state where state=(select top 1 state from customer_address where customer_id= ?)))) or region is not null or ratecard.region is null) order by ratecard_seq desc
gratisQuery=select top 1 order_code.*, oc.*, term.*, subscription_def.*,rate_class_effective.*, (case when ratecard.currency is null then state.currency else ratecard.currency end) as currency,isnull(ratecard.price,0.0) as ratecard_price,isnull((case when ratecard.currency is null then (1/(c.exchange_rate))* isnull(ratecard.price,0.0) else isnull(ratecard.price,0.0) end),0.00)as LocalAmount,isnull((case when ratecard.currency is null then isnull(ratecard.price,0.0) else (isnull(ratecard.price,0.0) * c.exchange_rate) end ),0.00) as baseAmount,c.exchange_rate from order_code order_code inner join oc oc on oc.oc_id = order_code.oc_id inner join subscription_def subscription_def on subscription_def.order_code_id = order_code.order_code_id  inner join term term on term.term_id = subscription_def.term_id left join rate_class_effective rate_class_effective on rate_class_effective.rate_class_id = subscription_def.rate_class_id and rate_class_effective.effective_date=(select max(rate_class_effective.effective_date) from rate_class_effective where  rate_class_effective.rate_class_id =subscription_def.rate_class_id) left join ratecard ratecard on(ratecard.rate_class_effective_seq = rate_class_effective.rate_class_effective_seq and ratecard.rate_class_id = rate_class_effective.rate_class_id) and ratecard.unit_type=order_code.revenue_method inner join customer_address on customer_id=? inner join state on state.state=customer_address.state or state.state_code_for_taxes=customer_address.state inner join currency c on c.currency=(case when ratecard.currency is null then state.currency else ratecard.currency end) where order_code.order_code_id = ? and (ratecard.region=(select region from region_state where state.state=(select case when state_code_for_taxes is null then state else state_code_for_taxes end as state from state where state=(select top 1 state from customer_address where customer_id= ?)) and (region_list=(select top 1 region_list from region_state where state=(select top 1 state from customer_address where customer_id= ?)))) or ratecard.region is null) order by ratecard_seq desc
productQuery=select top 1 p.product_id,p.inventory_id,p.description,p.product,p.product_color,p.product_size,p.product_style,p.rate_class_id,odr.order_code_id,odr.oc_id,odr.order_code_type,odr.order_code,o.oc,odr.qty,p.price,c.currency,c.exchange_rate, 0 as n_issues from product p inner join order_code odr on odr.order_code_id=p.order_code_id inner join oc o on o.oc_id=odr.oc_id inner join customer_address on customer_id=? inner join state on state.state=customer_address.state or state.state_code_for_taxes=customer_address.state inner join currency c on c.currency=state.currency where odr.order_code_id = ? and p.product_id=?
shippingQuery=select order_code,oc.oc_id,oc.oc,order_code.description, case when no_charge=0 then 'Balance Due' when no_charge=1 then 'Undefined' else 'Balance Due' end as billingType from order_code left join oc on oc.oc_id=order_code.oc_id where order_code_id=?

##for UCP
#dsn=ucp_cs_web1
#login=chandansingh
#password=1

#UCP localDsn
#dsn=UCP-Local
#login=chandansingh
#password=1

#for local PHP
#dsn=php
#login=pradaxinas
#password=qwer1234$

#for local countryside
#dsn=countryside
#login=think 
#password=think@12345

#for PHP
#dsn=php_cs_web
#login=pradaxinas
#password=qwer1234$

##for countryside
#dsn=web_countryside_test
#login=think 
#password=basel2ne

##for live sandbox countryside
#dsn=demo
#login=think
#password=think@1234

##for local 245 QADB_74
dsn=QADB74
login=think 
password=1

##for live demo QADB_74
#dsn=Noida-Live74
#login=think 
#password=1

##for demo countryside
#dsn=demo
#login=think
#password=think@1234

##for QADB thinkTesting countryside
#dsn=QADB_74_TEST
#login=think
#password=1
#ThinkSoap_address=http://10.33.5.71:85/soap.slap

ThinkSoap_address=http://192.168.80.245:85/soap.slap


#dsn=QADB_74_TEST
#login=think
#password=1#
#ThinkSoap_address=http://192.168.37.77:8585/soap.thwap
#
###for live 217 QADB_74 QADB-QA Noida-Live74
#dsn= QADB-QA
#login=think
#password=1
#ThinkSoap_address=http://192.168.80.102:85/soap.slap

##For PK SYSTEM LOCAL QADB_74 (192.168.80.139)
#dsn=QADB-Local
#login=think 
#password=1
#ThinkSoap_address=http://192.168.80.139:85/soap.slap